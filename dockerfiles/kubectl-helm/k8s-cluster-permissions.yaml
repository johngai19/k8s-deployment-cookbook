apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl-helm-admin
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubectl-helm-cluster-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "nodes", "pods", "services", "configmaps", "secrets", "persistentvolumes", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubectl-helm-cluster-rolebinding
subjects:
- kind: ServiceAccount
  name: kubectl-helm-admin
  namespace: default
roleRef:
  kind: ClusterRole
  name: kubectl-helm-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubectl-helm-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubectl-helm
  template:
    metadata:
      labels:
        app: kubectl-helm
    spec:
      serviceAccountName: kubectl-helm-admin
      containers:
      - name: kubectl-helm
        image: your-registry/kubectl-helm:latest  # Replace with your actual image name
        imagePullPolicy: Always
        command: ["bash", "-c", "sleep infinity"]  # Keep container running
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
